buildscript {
    repositories {
        maven {
            url = 'https://maven.minecraftforge.net'
        }
        maven {
            name = 'parchment'
            url = 'https://maven.parchmentmc.org'
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'

version = mod_version
group = maven_group
archivesBaseName = archives_base_name

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    mappings channel: 'parchment', version: '2021.08.29-1.16.5'

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=mekanismaddons.mixins.json"
            arg "-mixin.config=ae2.mixins.json"
            arg "-mixin.config=rs.mixins.json"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                mekanismaddons {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg "-mixin.config=mekanismaddons.mixins.json"
            arg "-mixin.config=ae2.mixins.json"
            arg "-mixin.config=rs.mixins.json"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                mekanismaddons {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'mekanismaddons', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                mekanismaddons {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name "Modmaven"
        url "https://modmaven.dev/"
        // For Gradle 5.1 and above, limit it to just AE2
        content {
            includeGroup 'appeng'
        }
    }
    maven { url 'https://cursemaven.com/' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.2'

    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'

    compileOnly fg.deobf("curse.maven:Mekanism-268560:3206392")
    compileOnly fg.deobf("appeng:appliedenergistics2:8.4.4")
    compileOnly fg.deobf("curse.maven:RefinedStorage-243076:3527504")

    runtimeOnly fg.deobf("curse.maven:Mekanism-268560:3206392")
    runtimeOnly fg.deobf("curse.maven:JEI-238222:3480853")
    runtimeOnly fg.deobf("curse.maven:AppleSkin-248787:3395800")
    runtimeOnly fg.deobf("appeng:appliedenergistics2:8.4.4")
    runtimeOnly fg.deobf("curse.maven:RefinedStorage-243076:3527504")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "mekanismaddons",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "mekanismaddons.mixins.json,ae2.mixins.json,rs.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

mixin {
    add sourceSets.main, "mekanismaddons.refmap.json"
}
